练习3-1
> class(Inf）#用class（）查找变量的类
[1] "numeric"
> class(NA)
[1] "logical"
> class(NaN)
[1] "numeric"
> class("")
[1] "character"
> typeof(Inf)#用typeof（）查找变量的类型
[1] "double"
> typeof(NA)
[1] "logical"
> typeof(NaN)
[1] "double"
> typeof("")
[1] "character"
> mode(Inf)#用mode（）查找变量的模式
[1] "numeric"
> mode(NA)
[1] "logical"
> mode(NaN)
[1] "numeric"
> mode("")
[1] "character"
> storage.mode(Inf)#用storage.mode()查找变量的储存模式
[1] "double"
> storage.mode(NA)
[1] "logical"
> storage.mode(NaN)
[1] "double"
> storage.mode("")
[1] "character"

练习3-2
> pets<-factor(sample(c("dog","cat","hamster","goldfish"),100,replace = TRUE))#随机从“dog”、“cat”、“hamster”和 “goldfish”中以相等的概率生成100个宠物名
> head(pets)#显示所得变量的前几个值
[1] cat      dog      hamster  dog      goldfish hamster 
Levels: cat dog goldfish hamster
> summary(pets)计算每种宠物的数量
     cat      dog goldfish  hamster 
      23       21       23       33 
      
练习3-3
> apple<-1
> banana<-2
> orang<-3 #创建一些以水果命名的变量
> ls(pattern = "a") #列出所有包含“a”的变量
[1] "apple"  "banana" "name"   "orang

练习4-1
> n<-seq_len(50)
> 三角形数<-n * (n + 1) / 2
> names(三角形数)<-letters[1:15]
> 三角形数[c("a","e","i","o","u")]
   a    e    i    o <NA> 
   1   15   45  120   NA

练习4-2
> diag(abs(seq.int(-10,10)))
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14]
 [1,]   10    0    0    0    0    0    0    0    0     0     0     0     0     0
 [2,]    0    9    0    0    0    0    0    0    0     0     0     0     0     0
 [3,]    0    0    8    0    0    0    0    0    0     0     0     0     0     0
 [4,]    0    0    0    7    0    0    0    0    0     0     0     0     0     0
 [5,]    0    0    0    0    6    0    0    0    0     0     0     0     0     0
 [6,]    0    0    0    0    0    5    0    0    0     0     0     0     0     0
 [7,]    0    0    0    0    0    0    4    0    0     0     0     0     0     0
 [8,]    0    0    0    0    0    0    0    3    0     0     0     0     0     0
 [9,]    0    0    0    0    0    0    0    0    2     0     0     0     0     0
[10,]    0    0    0    0    0    0    0    0    0     1     0     0     0     0
[11,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[12,]    0    0    0    0    0    0    0    0    0     0     0     1     0     0
[13,]    0    0    0    0    0    0    0    0    0     0     0     0     2     0
[14,]    0    0    0    0    0    0    0    0    0     0     0     0     0     3
[15,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[16,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[17,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[18,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[19,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[20,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[21,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
      [,15] [,16] [,17] [,18] [,19] [,20] [,21]
 [1,]     0     0     0     0     0     0     0
 [2,]     0     0     0     0     0     0     0
 [3,]     0     0     0     0     0     0     0
 [4,]     0     0     0     0     0     0     0
 [5,]     0     0     0     0     0     0     0
 [6,]     0     0     0     0     0     0     0
 [7,]     0     0     0     0     0     0     0
 [8,]     0     0     0     0     0     0     0
 [9,]     0     0     0     0     0     0     0
[10,]     0     0     0     0     0     0     0
[11,]     0     0     0     0     0     0     0
[12,]     0     0     0     0     0     0     0
[13,]     0     0     0     0     0     0     0
[14,]     0     0     0     0     0     0     0
[15,]     4     0     0     0     0     0     0
[16,]     0     5     0     0     0     0     0
[17,]     0     0     6     0     0     0     0
[18,]     0     0     0     7     0     0     0
[19,]     0     0     0     0     8     0     0
[20,]     0     0     0     0     0     9     0
[21,]     0     0     0     0     0     0    10

练习5-1
> list("0 to 9"=c(0,1,4,9),
       "10 to 19"=16,
       "20 to 29"=25,
       "30 to 39"=36,
       "40 to 49"=49,
       "50 to 59"=NULL,
       "60 to 69"=64,
       "70 to 79"=NULL,
       "80 to 89"=81,
       "90 to 99"=NULL) #创建一个列表变量，它的第一个元素包含所有从0到9的平方数，第二个元素为10至19之内的所有平方数，依此类推，最后一个元素为90到99之内的平方数
$`0 to 9`
[1] 0 1 4 9

$`10 to 19`
[1] 16

$`20 to 29`
[1] 25

$`30 to 39`
[1] 36

$`40 to 49`
[1] 49

$`50 to 59`
NULL

$`60 to 69`
[1] 64

$`70 to 79`
NULL

$`80 to 89`
[1] 81

$`90 to 99`
NULL

练习5-2
> iris_numeric<-iris[,1:4] #创建一个它由iris数据集的数值列组成新的数据框
> colMeans(iris_numeric) #计算各列的平均值
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
    5.843333     3.057333     3.758000     1.199333 
    
练习5-3
> beaver1$id<-1 #为beaver1数据集添加一列名为id的列，其值全部为1
> beaver2$id<-2 #为beaver2数据集添加一列名为id的列，其值全部为2
> both_beavers<-rbind(beaver1,beaver2) #垂直拼接两个数据框
> subset(both_beavers,as.logical(activ)) #找到所有活跃着的海狸的子集
    day time  temp activ id
54  346 1730 37.07     1  1
68  346 1950 37.10     1  1
80  346 2150 37.53     1  1
83  346 2230 37.25     1  1
86  346 2300 37.24     1  1
114 347  340 37.15     1  1
153 307 1550 37.98     1  2
154 307 1600 38.02     1  2
155 307 1610 38.00     1  2
156 307 1620 38.24     1  2
157 307 1630 38.10     1  2
158 307 1640 38.24     1  2
159 307 1650 38.11     1  2
160 307 1700 38.02     1  2
161 307 1710 38.11     1  2
162 307 1720 38.01     1  2
163 307 1730 37.91     1  2
164 307 1740 37.96     1  2
165 307 1750 38.03     1  2
166 307 1800 38.17     1  2
167 307 1810 38.19     1  2
168 307 1820 38.18     1  2
169 307 1830 38.15     1  2
170 307 1840 38.04     1  2
171 307 1850 37.96     1  2
172 307 1900 37.84     1  2
173 307 1910 37.83     1  2
174 307 1920 37.84     1  2
175 307 1930 37.74     1  2
176 307 1940 37.76     1  2
177 307 1950 37.76     1  2
178 307 2000 37.64     1  2
179 307 2010 37.63     1  2
180 307 2020 38.06     1  2
181 307 2030 38.19     1  2
182 307 2040 38.35     1  2
183 307 2050 38.25     1  2
184 307 2100 37.86     1  2
185 307 2110 37.95     1  2
186 307 2120 37.95     1  2
187 307 2130 37.76     1  2
188 307 2140 37.60     1  2
189 307 2150 37.89     1  2
190 307 2200 37.86     1  2
191 307 2210 37.71     1  2
192 307 2220 37.78     1  2
193 307 2230 37.82     1  2
194 307 2240 37.76     1  2
195 307 2250 37.81     1  2
196 307 2300 37.84     1  2
197 307 2310 38.01     1  2
198 307 2320 38.10     1  2
199 307 2330 38.15     1  2
200 307 2340 37.92     1  2
201 307 2350 37.64     1  2
202 308    0 37.70     1  2
203 308   10 37.46     1  2
204 308   20 37.41     1  2
205 308   30 37.46     1  2
206 308   40 37.56     1  2
207 308   50 37.55     1  2
208 308  100 37.75     1  2
209 308  110 37.76     1  2
210 308  120 37.73     1  2
211 308  130 37.77     1  2
212 308  140 38.01     1  2
213 308  150 38.04     1  2
214 308  200 38.07     1  2
