练习3-1
> class(Inf）#用class（）查找变量的类
[1] "numeric"
> class(NA)
[1] "logical"
> class(NaN)
[1] "numeric"
> class("")
[1] "character"
> typeof(Inf)#用typeof（）查找变量的类型
[1] "double"
> typeof(NA)
[1] "logical"
> typeof(NaN)
[1] "double"
> typeof("")
[1] "character"
> mode(Inf)#用mode（）查找变量的模式
[1] "numeric"
> mode(NA)
[1] "logical"
> mode(NaN)
[1] "numeric"
> mode("")
[1] "character"
> storage.mode(Inf)#用storage.mode()查找变量的储存模式
[1] "double"
> storage.mode(NA)
[1] "logical"
> storage.mode(NaN)
[1] "double"
> storage.mode("")
[1] "character"

练习3-2
> pets<-factor(sample(c("dog","cat","hamster","goldfish"),100,replace = TRUE))#随机从“dog”、“cat”、“hamster”和 “goldfish”中以相等的概率生成100个宠物名
> head(pets)#显示所得变量的前几个值
[1] cat      dog      hamster  dog      goldfish hamster 
Levels: cat dog goldfish hamster
> summary(pets)计算每种宠物的数量
     cat      dog goldfish  hamster 
      23       21       23       33 
      
练习3-3
> apple<-1
> banana<-2
> orang<-3 #创建一些以水果命名的变量
> ls(pattern = "a") #列出所有包含“a”的变量
[1] "apple"  "banana" "name"   "orang

练习4-1
> n<-seq_len(50)
> 三角形数<-n * (n + 1) / 2
> names(三角形数)<-letters[1:15]
> 三角形数[c("a","e","i","o","u")]
   a    e    i    o <NA> 
   1   15   45  120   NA

练习4-2
> diag(abs(seq.int(-10,10)))
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14]
 [1,]   10    0    0    0    0    0    0    0    0     0     0     0     0     0
 [2,]    0    9    0    0    0    0    0    0    0     0     0     0     0     0
 [3,]    0    0    8    0    0    0    0    0    0     0     0     0     0     0
 [4,]    0    0    0    7    0    0    0    0    0     0     0     0     0     0
 [5,]    0    0    0    0    6    0    0    0    0     0     0     0     0     0
 [6,]    0    0    0    0    0    5    0    0    0     0     0     0     0     0
 [7,]    0    0    0    0    0    0    4    0    0     0     0     0     0     0
 [8,]    0    0    0    0    0    0    0    3    0     0     0     0     0     0
 [9,]    0    0    0    0    0    0    0    0    2     0     0     0     0     0
[10,]    0    0    0    0    0    0    0    0    0     1     0     0     0     0
[11,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[12,]    0    0    0    0    0    0    0    0    0     0     0     1     0     0
[13,]    0    0    0    0    0    0    0    0    0     0     0     0     2     0
[14,]    0    0    0    0    0    0    0    0    0     0     0     0     0     3
[15,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[16,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[17,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[18,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[19,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[20,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
[21,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0
      [,15] [,16] [,17] [,18] [,19] [,20] [,21]
 [1,]     0     0     0     0     0     0     0
 [2,]     0     0     0     0     0     0     0
 [3,]     0     0     0     0     0     0     0
 [4,]     0     0     0     0     0     0     0
 [5,]     0     0     0     0     0     0     0
 [6,]     0     0     0     0     0     0     0
 [7,]     0     0     0     0     0     0     0
 [8,]     0     0     0     0     0     0     0
 [9,]     0     0     0     0     0     0     0
[10,]     0     0     0     0     0     0     0
[11,]     0     0     0     0     0     0     0
[12,]     0     0     0     0     0     0     0
[13,]     0     0     0     0     0     0     0
[14,]     0     0     0     0     0     0     0
[15,]     4     0     0     0     0     0     0
[16,]     0     5     0     0     0     0     0
[17,]     0     0     6     0     0     0     0
[18,]     0     0     0     7     0     0     0
[19,]     0     0     0     0     8     0     0
[20,]     0     0     0     0     0     9     0
[21,]     0     0     0     0     0     0    10
